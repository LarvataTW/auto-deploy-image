variables:
  DOCKER_DRIVER: overlay2

  HELM_VERSION: 2.14.0
  KUBERNETES_VERSION: 1.11.9
  # There is an issue with logging into k3s with kubectl 1.11.10

  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"

services:
  - docker:stable-dind

stages:
  - build
  - test

build:
  stage: build
  image: docker:stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --build-arg "HELM_VERSION=$HELM_VERSION" --build-arg "KUBERNETES_VERSION=$KUBERNETES_VERSION" --tag "$BUILD_IMAGE_NAME" .
    - docker push "$BUILD_IMAGE_NAME"

test-dependencies:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - helm version --client
    - tiller -version
    - kubectl version --client

test-kube-domain:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  variables:
    KUBE_INGRESS_BASE_DOMAIN: example.com
  script:
    - source /build/deploy-helpers.sh
    - check_kube_domain

test-kube-domain-legacy:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  variables:
    AUTO_DEVOPS_DOMAIN: example.com
  script:
    - source /build/deploy-helpers.sh
    - check_kube_domain || echo "Did not error as expected"

test-kube-domain_error:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - source /build/deploy-helpers.sh
    - check_kube_domain || echo "Did not error as expected"

test-download-chart:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - source /build/deploy-helpers.sh
    - download_chart

.k3s-services: &k3s-services
  services:
    - name: registry.gitlab.com/gitlab-org/cluster-integration/test-utils/k3s-gitlab-ci/releases/v0.5.0
      alias: k3s
      command: ["server", "--cluster-secret", "some-secret"]

test-ensure-namespace:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  <<: *k3s-services
  variables:
    KUBE_NAMESPACE: project-123456
  script:
    - source /build/deploy-helpers.sh
    - kubectl config set-cluster k3s --server https://node:some-secret@k3s:6443 --insecure-skip-tls-verify
    - kubectl config set-context k3s --cluster=k3s
    - kubectl config use-context k3s
    - kubectl version
    - ensure_namespace

test-initialize-tiller:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  <<: *k3s-services
  variables:
    KUBE_NAMESPACE: default
  script:
    - source /build/deploy-helpers.sh
    - kubectl config set-cluster k3s --server https://node:some-secret@k3s:6443 --insecure-skip-tls-verify
    - kubectl config set-context k3s --cluster=k3s
    - kubectl config use-context k3s
    - kubectl version
    - initialize_tiller

test-create-secret:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  <<: *k3s-services
  variables:
    KUBE_NAMESPACE: default
    CI_REGISTRY: example.com
    CI_DEPLOY_USER: ci-deploy-user
    CI_DEPLOY_PASSWORD: ci-deploy-password
    GITLAB_USER_EMAIL: user@example.com
  script:
    - source /build/deploy-helpers.sh
    - kubectl config set-cluster k3s --server https://node:some-secret@k3s:6443 --insecure-skip-tls-verify
    - kubectl config set-context k3s --cluster=k3s
    - kubectl config use-context k3s
    - kubectl version
    - create_secret
    - kubectl get secret -n $KUBE_NAMESPACE
    - kubectl get secret gitlab-registry -n $KUBE_NAMESPACE

